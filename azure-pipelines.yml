

# Docker


# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'db6ec02f-466a-46fb-b7bd-7fdc50d57054'
  imageRepository: 'andreimuthazuretest'
  containerRegistry: 'containerregistryandreidorinmuth30442.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/spring-demo/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: CodeCoverage
    displayName: Code Coverage
    pool:
      name: local
    steps:
      - task: Maven@3
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          codeCoverageToolOption: 'JaCoCo'
          codeCoverageFailIfEmpty: true
          javaHomeOption: 'JDKVersion'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          checkStyleRunAnalysis: true

      - task: Maven@3
        displayName: "Maven Test"
        inputs:
          mavenPomFile: "pom.xml"
          goals: "test"
      - task: PublishTestResults@2
        displayName: "Publish test results"
        inputs:
          testResultsFormat: "JUnit"
          mergeTestResults: true # Optional
      - task: PublishCodeCoverageResults@1
        displayName: "Publish publish code coverage"
        inputs:
          summaryFileLocation: $(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml
          pathToSources: $(System.DefaultWorkingDirectory)/src/main/java/
  - job: Build
    displayName: Build
    pool:
      name: local
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags:  |
          latest
          $(Build.BuildId)
    - task: CopyFiles@2
      inputs:
        SourceFolder: ''
        Contents: 'docker-compose.yml'
        TargetFolder: '$(Agent.WorkFolder)'